{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "ContactActionController"
    },
    "designerId": "4806a417-9492-4f74-9789-6748f314ef4b",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#addContactButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "addContactButtonClick",
                "implHandler": [
                    "/*Toolbar Add Contact Button*/",
                    "",
                    "// Creazione di una finestra di aggiunta Contatto",
                    "var addContactWindow = Ext.create(\"syncbook.view.AddContactWindow\");",
                    "",
                    "var varUUID = Ext.create(\"syncbook.model.UuidGenerator\").data.UUID;",
                    "// Creazione di un contatto ausiliario secondo il modello scelto per caricare il Form della finestra di aggiunta del contatto",
                    "var auxiliarNewContact = Ext.create(\"syncbook.model.ContactInformationModel\", {",
                    "    contactColor: \"\",",
                    "    contactGroup: \"\",",
                    "    contactType: \"\",",
                    "    contactImage: \"\",",
                    "    contactSurname: \"\",",
                    "    contactUsername: \"\",",
                    "    contactName: \"\",",
                    "    contactEMail: \"\",",
                    "    contactPhoneNumber: \"\",",
                    "    contactMobileNumber: \"\",",
                    "    contactFax: \"\",",
                    "    contactAddress: \"\",",
                    "    contactWeb: \"\",",
                    "    contactPartitaIva: \"\",",
                    "    contactCodiceFiscale: \"\",",
                    "    contactFacebook: \"\",",
                    "    contactTwitter: \"\",",
                    "    contactInstagram: \"\",",
                    "    contactGoogle: \"\",",
                    "    contactLinkedin: \"\",",
                    "    contactSkype: \"\",",
                    "    UUID: varUUID",
                    "});",
                    "// Carico il Record all'interno della finestra per l'aggiunta del contatto",
                    "this.getAddContactWindow().getComponent('addContactForm').loadRecord(auxiliarNewContact);",
                    "// Mostro la finestra al Client",
                    "addContactWindow.show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "1aedce4e-a0d6-40f8-a4a9-ef449ebac888"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#addContactSubmit",
                "designer|targetType": "Ext.button.Button",
                "fn": "addContactSubmitClick",
                "implHandler": [
                    "/*Submit Button in Add Contact Window*/",
                    "",
                    "// Raggiungo il Form.",
                    "var auxiliarForm = this.getAddContactWindow().getComponent('addContactForm').getForm();",
                    "// Estraggo il Record dal Form.",
                    "formRecord = auxiliarForm.getRecord();",
                    "// Aggiorno il Form con il Record appena prelevato.",
                    "auxiliarForm.updateRecord(formRecord);",
                    "// Visualizzo Errori, se presenti.",
                    "auxiliarForm.clearInvalid();",
                    "",
                    "// Verifico la Validità del Form",
                    "if(auxiliarForm.isValid()) {",
                    "    // Chiudo la finestra di Aggiunta di un Contatto",
                    "    this.getAddContactWindow().close();",
                    "    // Confermo che il Record preso dal Form è stato utilizzato",
                    "    formRecord.setDirty();",
                    "    //Chiamo la funzione ausiliaria per l'aggiunta di un contatto all'interno di un database",
                    "    this.addingContactFunction(formRecord);",
                    "} else {",
                    "    Ext.Msg.show({",
                    "        title: \"Form Error\",",
                    "        msg: \"Uncorrect Form Compilation\",",
                    "        buttons: Ext.Msg.OK,",
                    "        closable: false,",
                    "        scope: this,",
                    "        icon: Ext.window.MessageBox.ERROR",
                    "    });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "57618ecc-ac6b-4186-a2e6-8c012754499d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "AddContactWindow",
                "selector": "AddContactWindow_ua"
            },
            "designerId": "140e2126-7775-4910-9672-852c18717cac"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "ModContactWindow",
                "selector": "ModContactWindow_ua"
            },
            "designerId": "b4300787-5412-4681-993d-7ccaaaebbaad"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "InitialViewArea",
                "selector": "InitialViewArea_ua"
            },
            "designerId": "d61e8757-4335-40cf-beee-c200d972e350"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#modContactButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "modContactButtonClick",
                "implHandler": [
                    "/*Toolbar Mod Contact Button*/",
                    "",
                    "// Creo una referenza alla ChooseContactGrid",
                    "var contactGrid = this.getInitialViewArea().getComponent('groupTabbedPane').getComponent('groupName').getComponent('chooseContactGrid');",
                    "// Estraggo il Record selezionato nella griglia appena referenziata",
                    "contactGridSelected = contactGrid.getSelectionModel().getSelection();",
                    "",
                    "if(contactGridSelected.length>0) {",
                    "    // Creazione di una finestra di modifica Contatto",
                    "    var modContactWindow = Ext.create(\"syncbook.view.ModContactWindow\");",
                    "    // Carico il Record all'interno della finestra per la modifica del contatto",
                    "    this.getModContactWindow().getComponent('modContactForm').loadRecord(contactGridSelected[0]);",
                    "    // Mostro la finestra al Client",
                    "    modContactWindow.show();",
                    "} else {",
                    "    Ext.Msg.show({",
                    "        title: \"No Item Selection\",",
                    "        msg: \"Select an Item in the Grid to Proceed with your Action\",",
                    "        buttons: Ext.Msg.OK,",
                    "        closable: false,",
                    "        scope: this,",
                    "        icon: Ext.window.MessageBox.ERROR",
                    "    });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "30003305-11b5-4a2b-bad2-5ba2dcc2f7a2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#modContactSubmit",
                "designer|targetType": "Ext.button.Button",
                "fn": "modContactSubmitClick",
                "implHandler": [
                    "/*Submit Button in Mod Contact Window*/",
                    "",
                    "// Raggiungo il Form.",
                    "var auxiliarForm = this.getModContactWindow().getComponent('modContactForm').getForm();",
                    "// Estraggo il Record dal Form.",
                    "formRecord = auxiliarForm.getRecord();",
                    "// Aggiorno il Form con il Record appena prelevato.",
                    "auxiliarForm.updateRecord(formRecord);",
                    "// Visualizzo Errori, se presenti.",
                    "auxiliarForm.clearInvalid();",
                    "",
                    "// Verifico la Validità del Form",
                    "if(auxiliarForm.isValid()) {",
                    "    // Chiudo la finestra di Modifica di un Contatto",
                    "    this.getModContactWindow().close();",
                    "    // Confermo che il Record preso dal Form è stato utilizzato",
                    "    formRecord.setDirty();",
                    "",
                    "    // Chiamo la funzione ausiliaria per la modifica di un Contatto all'interno di un Database",
                    "    this.moddingContactFunction(formRecord);",
                    "",
                    "    var contactForm = this.getInitialViewArea().getComponent('groupTabbedPane').getComponent('groupName').getComponent('singleContactForm');",
                    "    contactForm.getForm().loadRecord(formRecord);",
                    "",
                    "    if(formRecord.data.contactUsername!==\"\") {",
                    "        contactForm.setTitle(\"Contact : \"+formRecord.data.contactName+\" - \"+formRecord.data.contactUsername+\" - \"+formRecord.data.contactSurname);",
                    "    } else {",
                    "        contactForm.setTitle(\"Contact : \"+formRecord.data.contactName+\" - \"+formRecord.data.contactSurname);",
                    "    }",
                    "    contactForm.getComponent('contactImage').setSrc(formRecord.data.contactImage);",
                    "} else {",
                    "    Ext.Msg.show({",
                    "        title: \"Form Error\",",
                    "        msg: \"Uncorrect Form Compilation\",",
                    "        buttons: Ext.Msg.OK,",
                    "        closable: false,",
                    "        scope: this,",
                    "        icon: Ext.window.MessageBox.ERROR",
                    "    });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "ad34436c-c5b5-4746-b768-8f23b5b3ec8b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "storeRecord"
                ],
                "fn": "addingContactFunction",
                "implHandler": [
                    "var mySelf = this;",
                    "",
                    "storeRecord.save({",
                    "    callback : function(records, operation, success) {",
                    "        var operationResult = Ext.decode(operation.response.responseText);",
                    "",
                    "        if(operationResult.contacts.errorSuccess === false) {",
                    "            console.error(\"An error with code : \"+operationResult.contacts.errorCode+\" has occoured = \"+operationResult.contacts.errorDescription);",
                    "        } else {",
                    "            mySelf.getInitialViewArea().getComponent('groupTabbedPane').getComponent('groupName').getComponent('chooseContactGrid').store.load();",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "designerId": "821bcfb0-2315-4a03-9852-9fceb883d8d8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#deleteContactButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "deleteContactSubmitClick",
                "implHandler": [
                    "/*Toolbar Delete Contact Button*/",
                    "",
                    "// Creo una referenza alla ChooseContactGrid",
                    "var contactGrid = this.getInitialViewArea().getComponent('groupTabbedPane').getComponent('groupName').getComponent('chooseContactGrid');",
                    "// Estraggo il Record selezionato nella griglia appena referenziata",
                    "var contactGridSelected = contactGrid.getSelectionModel().getSelection();",
                    "",
                    "if(contactGridSelected.length>0) {",
                    "    Ext.Msg.show({",
                    "        title: \"Deleting Operation\",",
                    "        msg: \"Are You Sure to Delete the contact : \"+contactGridSelected[0].data.contactSurname+\" \"+contactGridSelected[0].data.contactName+\" ?\",",
                    "        buttons: Ext.Msg.YESNO,",
                    "        closable: false,",
                    "        scope: this,",
                    "        fn: function(btn) {",
                    "            if(btn === 'yes') {",
                    "                this.deletingContactFunction(contactGridSelected[0]);",
                    "",
                    "                this.getInitialViewArea().getComponent('groupTabbedPane').getComponent('groupName').getComponent('singleContactForm').getForm().reset();",
                    "                this.getInitialViewArea().getComponent('groupTabbedPane').getComponent('groupName').getComponent('singleContactForm').setTitle(\"Contact Information\");",
                    "            }",
                    "        },",
                    "        icon: Ext.window.MessageBox.QUESTION",
                    "    });",
                    "} else {",
                    "    Ext.Msg.show({",
                    "        title: \"No Item Selection\",",
                    "        msg: \"Select an Item in the Grid to Proceed with your Action\",",
                    "        buttons: Ext.Msg.OK,",
                    "        closable: false,",
                    "        scope: this,",
                    "        icon: Ext.window.MessageBox.ERROR",
                    "    });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "49ead21f-c9ba-463d-8cc2-6501caaa6845"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "storeRecord"
                ],
                "fn": "moddingContactFunction",
                "implHandler": [
                    "mySelf = this;",
                    "",
                    "storeRecord.save({",
                    "    callback : function(records, operation, success) {",
                    "        var operationResult = Ext.decode(operation.response.responseText);",
                    "",
                    "        if(operationResult.contacts.errorSuccess === false) {",
                    "            console.error(\"An error with code : \"+operationResult.contacts.errorCode+\" has occoured = \"+operationResult.contacts.errorDescription);",
                    "        } else {",
                    "            mySelf.getInitialViewArea().getComponent('groupTabbedPane').getComponent('groupName').getComponent('chooseContactGrid').store.load();",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "designerId": "503e300d-b3b7-43b4-bca6-30369820fe06"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "storeRecord"
                ],
                "fn": "deletingContactFunction",
                "implHandler": [
                    "var mySelf = this;",
                    "",
                    "storeRecord.destroy({",
                    "    callback : function(records, operation, success) {",
                    "        var operationResult = Ext.decode(operation.response.responseText);",
                    "",
                    "        if(operationResult.contacts.errorSuccess === false) {",
                    "            console.error(\"An error with code : \"+operationResult.contacts.errorCode+\" has occoured = \"+operationResult.contacts.errorDescription);",
                    "        } else {",
                    "            mySelf.getInitialViewArea().getComponent('groupTabbedPane').getComponent('groupName').getComponent('chooseContactGrid').store.load();",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "designerId": "e3390753-4c39-497b-b917-a434d2c19823"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#syncContactButton",
                "designer|targetType": "Ext.button.Button",
                "fn": "syncContactButtonClick",
                "implHandler": [
                    "this.syncContactsFunction();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "a9a5d01d-9081-4ca0-93a8-921e1c724dec"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "syncContactsFunction",
                "implHandler": [
                    "var mySelf = this;",
                    "",
                    "Ext.Ajax.request({",
                    "    url: \"resources/libraries/syncbookServices/syncService.php\",",
                    "    params: {",
                    "        syncContacts : \"syncContacts\"",
                    "    },",
                    "",
                    "    success: function(response) {",
                    "        var operationResult = Ext.decode(response.responseText);",
                    "        if(operationResult.contacts.errorSuccess === false) {",
                    "            console.error(\"An error with code : \"+operationResult.contacts.errorCode+\" has occoured = \"+operationResult.contacts.errorDescription);",
                    "        } else {",
                    "            mySelf.getInitialViewArea().getComponent('groupTabbedPane').getComponent('groupName').getComponent('chooseContactGrid').store.load();",
                    "        }",
                    "    },",
                    "",
                    "    failure: function(response) {",
                    "        Ext.Msg.show({",
                    "            title: \"Response Error\",",
                    "            msg: \"Response Error Message\",",
                    "            buttons: Ext.Msg.OK,",
                    "            closable: false,",
                    "            scope: this,",
                    "            icon: Ext.window.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});"
                ]
            },
            "designerId": "dbe68589-d18e-47d7-a39a-c8b7431b7dcc"
        }
    ]
}